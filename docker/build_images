#!/bin/bash

readonly USERNAME=anderspitman
readonly DOCKER_BASE_DIR=.
readonly CODE_BASE_DIR=../..
readonly NODE_IMAGE_NAMES="styx jellyfish gatekeeper seagull blip"
readonly GO_IMAGE_NAMES="shoreline"


function main {
    build_docker_image "common"
    build_docker_image "node"
    build_node_images
    build_go_images
}

function build_docker_image {
    name=${1}
    echo "Building image ${name}"
    build_dir=${DOCKER_BASE_DIR}/${name}
    docker build -q -t ${USERNAME}/tidepool-${name} ${build_dir} > /dev/null
}

function build_node_images {
    echo "Building node images"
    for image_name in ${NODE_IMAGE_NAMES}; do
        build_image $image_name

        if [ "$?" != "0" ]; then
            break
        fi
    done
}

function build_go_images {
    echo "Building go images"
    for image_name in ${GO_IMAGE_NAMES}; do
        build_go_image $image_name

        if [ "$?" != "0" ]; then
            break
        fi
    done
}

function build_go_image {
    service_name=${1}
    service_dir=${CODE_BASE_DIR}/${service_name}
    original_dir=`pwd`
    cd ${service_dir}
    # GOPATH has to be an absolute path
    export GOPATH=`readlink --canonicalize .`
    # Build staticly linked binary
    outdir=${service_dir}/dist
    CGO_ENABLED=0 go build -a -ldflags '-s' -o ${outdir}/${service_name}
    cd ${original_dir}

    build_image ${service_name}
}

function build_image {
    service_name=${1}
    archive_filename=${service_name}.tar.gz
    archive_path=/tmp/${archive_filename}
    service_dir=${CODE_BASE_DIR}/${service_name}
    tar -czf ${archive_path} ${service_dir}
    build_dir=${DOCKER_BASE_DIR}/${service_name}
    mv $archive_path ${build_dir}

    build_docker_image ${service_name}
}


#main
